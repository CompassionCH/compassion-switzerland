<odoo>
    <!--
    SDS States of contracts :
    (new contract)                                - draft
    (contract validation)                         - waiting welcome
    (after 10 days welcome communication is sent) - active
    (child is departed)                           - sub_waiting
    (new sponsorship is created, or no sub)       - sub (sub pending) / no_sub
    (new sponsorship is active after 50 days)     - sub_accept / sub_reject
    -->

    <data noupdate="1">
        <!-- Rule for sending welcome letter after 10 days of validation -->
        <record id="check_welcome_email" model="base.action.rule">
            <field name="name">Sponsorship: Check Welcome Letter</field>
            <field name="model_id" ref="model_recurring_contract"/>
            <field name="kind">on_time</field>
            <field name="trg_date_id" ref="sponsorship_tracking.field_recurring_contract_sds_state_date"/>
            <field name="filter_domain">[('sds_state', '=', 'waiting_welcome')]</field>
            <field name="trg_date_range">10</field>
            <field name="trg_date_range_type">day</field>
            <field name="server_action_ids" eval="[(6, 0, [ref('send_welcome_action')])]"/>
        </record>

        <!-- Rule for sending reminder after SMS request received but step 2 is not completed. -->
        <record id="sms_sponsorship_reminder" model="base.action.rule">
            <field name="name">SMS Sponsorship: Remind sponsorship confirmation</field>
            <field name="model_id" ref="model_sms_child_request"/>
            <field name="kind">on_time</field>
            <field name="trg_date_id" ref="sms_sponsorship.field_sms_child_request_date"/>
            <field name="filter_domain">[('state', '=', 'step1')]</field>
            <field name="trg_date_range">3</field>
            <field name="trg_date_range_type">day</field>
            <field name="server_action_ids" eval="[(6, 0, [ref('send_sms_sponsorship_reminder')])]"/>
        </record>

        <!-- Rule for sending unread B2S letters by post -->
        <record id="unread_b2s_by_post_rule" model="base.action.rule">
            <field name="name">B2S letter: send unread letters by post</field>
            <field name="model_id" ref="model_correspondence"/>
            <field name="kind">on_time</field>
            <field name="trg_date_id" ref="field_correspondence_sent_date"/>
            <field name="filter_domain">[('communication_id.state', '=', 'done'), ('communication_id.send_mode', '=', 'digital'), ('email_read', '=', False)]</field>
            <field name="trg_date_range">3</field>
            <field name="trg_date_range_type">day</field>
            <field name="server_action_ids" eval="[(6, 0, [ref('send_unread_b2s')])]"/>
        </record>
    </data>
</odoo>
