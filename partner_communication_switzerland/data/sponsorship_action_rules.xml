<odoo>
    <!--
    SDS States of contracts :
    (new contract)                                - draft
    (contract validation)                         - waiting welcome
    (after 10 days welcome communication is sent) - active
    (child is departed)                           - sub_waiting
    (new sponsorship is created, or no sub)       - sub (sub pending) / no_sub
    (new sponsorship is active after 50 days)     - sub_accept / sub_reject
    -->

    <!-- Rule for sending reminder after SMS request received but step 2 is not completed. -->
    <record id="sms_sponsorship_reminder" model="base.automation">
        <field name="name">SMS Sponsorship: Remind sponsorship confirmation</field>
        <field name="model_id" ref="model_sms_child_request"/>
        <field name="trigger">on_time</field>
        <field name="trg_date_id" ref="sms_sponsorship.field_sms_child_request__date"/>
        <field name="filter_domain">[('state', '=', 'step1')]</field>
        <field name="trg_date_range">3</field>
        <field name="trg_date_range_type">day</field>
        <field name="state">code</field>
        <field name="code">records.send_step2_reminder()</field>
    </record>

    <!-- Rule for sending unread B2S letters by post -->
    <record id="unread_b2s_by_post_rule" model="base.automation">
        <field name="name">B2S letter: send unread letters by post</field>
        <field name="model_id" ref="model_correspondence"/>
        <field name="trigger">on_time</field>
        <field name="trg_date_id" ref="field_correspondence__sent_date"/>
        <field name="filter_domain">[('communication_id.state', '=', 'done'), ('communication_id.send_mode', '=', 'digital')]</field>
        <field name="trg_date_range">3</field>
        <field name="trg_date_range_type">day</field>
        <field name="state">code</field>
        <field name="code">records.send_unread_b2s()</field>
    </record>

    <!-- Rule for sending SUB proposal -->
    <record id="sub_proposal_rule" model="base.automation">
        <field name="name">Sponsorship SUB Proposal</field>
        <field name="model_id" ref="model_recurring_contract"/>
        <field name="trigger">on_time</field>
        <field name="trg_date_id" ref="recurring_contract.field_recurring_contract__create_date"/>
        <field name="filter_domain">[('parent_id.sds_state','=','sub'),('state','=','draft')]</field>
        <field name="trg_date_range">6</field>
        <field name="trg_date_range_type">day</field>
        <field name="state">code</field>
        <field name="code">
records.send_communication(env.ref('partner_communication_switzerland.planned_sub_dossier'), both=True)
records.send_communication(env.ref('partner_communication_switzerland.config_onboarding_photo_by_post'), both=True)
        </field>
    </record>
    <record id="sub_proposal_validation" model="base.automation">
        <field name="name">Sponsorship SUB Proposal validation</field>
        <field name="model_id" ref="model_recurring_contract"/>
        <field name="trigger">on_time</field>
        <field name="trg_date_id" ref="field_recurring_contract__sub_proposal_date"/>
        <field name="filter_domain">[('parent_id','!=',False),('state','=','draft')]</field>
        <field name="trg_date_range">14</field>
        <field name="trg_date_range_type">day</field>
        <field name="state">code</field>
        <field name="code">
records.contract_waiting()
        </field>
    </record>

    <!-- Rules for zoom sessions -->
    <record id="zoom_session_attended_rule" model="base.automation">
        <field name="name">Zoom Sessions: mark session as attended</field>
        <field name="model_id" ref="model_res_partner_zoom_session"/>
        <field name="trigger">on_time</field>
        <field name="trg_date_id" ref="field_res_partner_zoom_session__date_stop"/>
        <field name="state">code</field>
        <field name="code">records.post_attended()</field>
    </record>
</odoo>
